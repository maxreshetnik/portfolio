name: Deployment

on:
  push:
    branches: [ cicd ]

jobs:

  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.image_id.outputs.image_tag }}
      repo_name: ${{ steps.image_id.outputs.repo_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set output image name and tags
        id: image_id
        shell: bash
        run: |
          echo "::set-output name=image::${GITHUB_REPOSITORY}"
          echo "::set-output name=image_tag::${GITHUB_SHA::12}"
          echo "::set-output name=repo_name::${GITHUB_REPOSITORY#*/}"

      - name: Add execute permissions for context files
        run: chmod -R +x .

      - name: Build and test images
        env:
          BACKEND_IMAGE: ${{ steps.image_id.outputs.image }}:${{ steps.image_id.outputs.image_tag }}
        run: |
          make stack_build DOMAIN_NAME=localhost SSL_EMAIL=localhost
          docker tag ${BACKEND_IMAGE} ${{ steps.image_id.outputs.image }}:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push images to Docker Hub
        run: docker image push --all-tags ${{ steps.image_id.outputs.image }}

  test:
    needs: build
    if: ${{ success() }}
    runs-on: ubuntu-latest
    environment: stage
    steps:
      - name: Checkout
        uses: actions/checkout@v2

  deployment:
    needs: [build, test]
    if: ${{ success() }}
    runs-on: ubuntu-latest
    environment: production
    env:
      DOCKER_HOST: "ssh://${{ secrets.SSH_HOST }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create ssh files
        shell: bash
        run: |
          mkdir -p $HOME/.ssh
          echo -e "${{ secrets.SSH_CONFIG }}" >> $HOME/.ssh/config
          echo -e "${{ secrets.SSH_KEY }}" > $HOME/.ssh/id_rsa
          echo "" >> $HOME/.ssh/known_hosts
          chmod -R 700 $HOME/.ssh
          ls -la $HOME/.ssh

      - name: Add server to ssh known hosts
        shell: bash
        run: ssh-keyscan -H "${{ secrets.SSH_HOST_NAME }}" >> $HOME/.ssh/known_hosts

      - name: Ð¡heck docker and compose on a server
        run: |
          docker --host $DOCKER_HOST version
          docker-compose --host $DOCKER_HOST version

      - name: Deploy
        env:
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
          SSL_EMAIL: ${{ secrets.SSL_EMAIL }}
          PROJECT_NAME: ${{ needs.build.outputs.repo_name }}
          BACKEND_IMAGE: "${{ github.repository }}:${{ needs.build.outputs.image_tag }}"
        shell: bash
        run: make deploy || ( make stack_rm ; sleep 10 ; make deploy )
