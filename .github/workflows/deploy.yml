name: Deployment

on:
  push:
    branches: [ cicd ]

jobs:

  build:
    runs-on: ubuntu-latest
    outputs:
      image_tags: ${{ steps.image_id.outputs.image_tags }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set output image name and tags
        id: image_id
        env:
          docker_id: ${{ secrets.DOCKER_HUB_USERNAME }}
        shell: bash
        run: |
          echo "::set-output name=image::${docker_id}/${GITHUB_REPOSITORY#*/}"
          echo "::set-output name=image_tags::${docker_id}/${GITHUB_REPOSITORY#*/}:${GITHUB_SHA::8}"

      - name: Build, tag and push image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          target: prod
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.image_id.outputs.image }}:latest,${{ steps.image_id.outputs.image_tags }}
          cache-from: type=registry,ref=${{ steps.image_id.outputs.image }}:buildcache
          cache-to: type=registry,ref=${{ steps.image_id.outputs.image }}:buildcache,mode=max

  deployment:
    needs: build
    if: ${{ success() }}
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Test
      run: |
        echo "Check steps"
        echo "${{ needs.build.outputs.image_tags }}"
