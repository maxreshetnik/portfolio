name: CI

on:
  push:
    branches: [ cicd ]

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/${GITHUB_REPOSITORY#*/}
      IMAGE_TAG:  ${GITHUB_SHA::8}
    outputs:
      image_id: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build, tag and push image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          target: prod
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest,${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max

  deploy:
    needs: build
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Test
      run: |
        echo "Check steps"
        echo "${{ needs.build.outputs.image_id }}"
