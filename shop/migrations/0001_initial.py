# Generated by Django 3.2.3 on 2022-01-22 00:52

from decimal import Decimal
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import shop.services


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mainapp', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True, verbose_name='name')),
                ('category', models.ForeignKey(blank=True, limit_choices_to={'category__isnull': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categories', to='shop.category', verbose_name='parent category')),
                ('content_type', models.ForeignKey(limit_choices_to={'app_label': 'shop', 'model__endswith': 'product'}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name_plural': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveIntegerField(choices=[(1, 'Cart'), (2, 'Processing'), (3, 'Shipping'), (4, 'Finished'), (5, 'Canceled')])),
                ('address', models.TextField(blank=True)),
                ('order_cost', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=9, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('reserved', models.BooleanField(default=False)),
                ('order_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('mainapp.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TvProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('marking', models.CharField(help_text='Model or the main feature of the product.', max_length=40)),
                ('image', models.ImageField(help_text='Minimal image sizes is 600x600 pixels. Max upload file size up to 3 MB.', upload_to=shop.services.get_file_directory_path, validators=[shop.services.validate_image_size])),
                ('description', models.TextField(blank=True)),
                ('unit', models.CharField(choices=[('Weight', (('KG', 'kilo'), ('LB', 'pound'))), ('Volume', (('L', 'liter'), ('GAL', 'gallon'))), ('PC', 'piece'), ('PCK', 'pack'), ('PR', 'pair'), ('BTL', 'bottle'), ('LT', 'lot')], default='PC', max_length=3)),
                ('unit_for_weight_vol', models.CharField(choices=[('Weight', (('KG', 'kilo'), ('LB', 'pound'))), ('Volume', (('L', 'liter'), ('GAL', 'gallon'))), ('PC', 'piece'), ('PCK', 'pack'), ('PR', 'pair'), ('BTL', 'bottle'), ('LT', 'lot')], default='KG', max_length=3, verbose_name='unit for weight/volume')),
                ('date_added', models.DateField(auto_now_add=True)),
                ('screen_diagonal', models.CharField(max_length=10)),
                ('screen_resolution', models.CharField(max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='shop.category')),
            ],
            options={
                'verbose_name': 'TV',
                'ordering': ['-date_added'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(blank=True, max_length=20)),
                ('image', models.ImageField(blank=True, help_text='Minimal image sizes is 600x600 pixels. Max upload file size up to 3 MB.', upload_to=shop.services.get_file_directory_path, validators=[shop.services.validate_image_size])),
                ('pre_packing', models.DecimalField(decimal_places=3, default='1', max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='pre-packing')),
                ('weight_vol', models.DecimalField(decimal_places=3, max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='weight/volume')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('discount', models.IntegerField(default=0, help_text='A discount from 0 to 99%.', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)])),
                ('discount_price', models.DecimalField(decimal_places=2, default=Decimal('0'), editable=False, max_digits=9)),
                ('sale_price', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Special price replaces the discount price, 0 is disabled', max_digits=9, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('available_qty', models.DecimalField(decimal_places=3, max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='available quantity')),
                ('addition', models.CharField(blank=True, max_length=100, verbose_name='additional information')),
                ('date_added', models.DateField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='SmartphoneProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('marking', models.CharField(help_text='Model or the main feature of the product.', max_length=40)),
                ('image', models.ImageField(help_text='Minimal image sizes is 600x600 pixels. Max upload file size up to 3 MB.', upload_to=shop.services.get_file_directory_path, validators=[shop.services.validate_image_size])),
                ('description', models.TextField(blank=True)),
                ('unit', models.CharField(choices=[('Weight', (('KG', 'kilo'), ('LB', 'pound'))), ('Volume', (('L', 'liter'), ('GAL', 'gallon'))), ('PC', 'piece'), ('PCK', 'pack'), ('PR', 'pair'), ('BTL', 'bottle'), ('LT', 'lot')], default='PC', max_length=3)),
                ('unit_for_weight_vol', models.CharField(choices=[('Weight', (('KG', 'kilo'), ('LB', 'pound'))), ('Volume', (('L', 'liter'), ('GAL', 'gallon'))), ('PC', 'piece'), ('PCK', 'pack'), ('PR', 'pair'), ('BTL', 'bottle'), ('LT', 'lot')], default='KG', max_length=3, verbose_name='unit for weight/volume')),
                ('date_added', models.DateField(auto_now_add=True)),
                ('ram', models.CharField(max_length=30)),
                ('memory', models.CharField(max_length=30)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='shop.category')),
            ],
            options={
                'verbose_name': 'smartphone',
                'ordering': ['-date_added'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=90)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=60)),
                ('region', models.CharField(max_length=60)),
                ('postcode', models.CharField(max_length=10)),
                ('country', models.CharField(max_length=60)),
                ('phone', models.CharField(max_length=20)),
                ('by_default', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'shipping addresses',
            },
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.IntegerField(choices=[(1, 'One'), (2, 'Two'), (3, 'Three'), (4, 'Four'), (5, 'Five')])),
                ('review', models.TextField(blank=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.order')),
                ('specification', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.specification')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='specs',
            field=models.ManyToManyField(through='shop.OrderItem', to='shop.Specification'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='FoodProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('marking', models.CharField(help_text='Model or the main feature of the product.', max_length=40)),
                ('image', models.ImageField(help_text='Minimal image sizes is 600x600 pixels. Max upload file size up to 3 MB.', upload_to=shop.services.get_file_directory_path, validators=[shop.services.validate_image_size])),
                ('description', models.TextField(blank=True)),
                ('unit', models.CharField(choices=[('Weight', (('KG', 'kilo'), ('LB', 'pound'))), ('Volume', (('L', 'liter'), ('GAL', 'gallon'))), ('PC', 'piece'), ('PCK', 'pack'), ('PR', 'pair'), ('BTL', 'bottle'), ('LT', 'lot')], default='PC', max_length=3)),
                ('unit_for_weight_vol', models.CharField(choices=[('Weight', (('KG', 'kilo'), ('LB', 'pound'))), ('Volume', (('L', 'liter'), ('GAL', 'gallon'))), ('PC', 'piece'), ('PCK', 'pack'), ('PR', 'pair'), ('BTL', 'bottle'), ('LT', 'lot')], default='KG', max_length=3, verbose_name='unit for weight/volume')),
                ('date_added', models.DateField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='shop.category')),
            ],
            options={
                'verbose_name': 'foodstuff',
                'ordering': ['-date_added'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClothingProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('marking', models.CharField(help_text='Model or the main feature of the product.', max_length=40)),
                ('image', models.ImageField(help_text='Minimal image sizes is 600x600 pixels. Max upload file size up to 3 MB.', upload_to=shop.services.get_file_directory_path, validators=[shop.services.validate_image_size])),
                ('description', models.TextField(blank=True)),
                ('unit', models.CharField(choices=[('Weight', (('KG', 'kilo'), ('LB', 'pound'))), ('Volume', (('L', 'liter'), ('GAL', 'gallon'))), ('PC', 'piece'), ('PCK', 'pack'), ('PR', 'pair'), ('BTL', 'bottle'), ('LT', 'lot')], default='PC', max_length=3)),
                ('unit_for_weight_vol', models.CharField(choices=[('Weight', (('KG', 'kilo'), ('LB', 'pound'))), ('Volume', (('L', 'liter'), ('GAL', 'gallon'))), ('PC', 'piece'), ('PCK', 'pack'), ('PR', 'pair'), ('BTL', 'bottle'), ('LT', 'lot')], default='KG', max_length=3, verbose_name='unit for weight/volume')),
                ('date_added', models.DateField(auto_now_add=True)),
                ('type', models.CharField(choices=[('M', 'Men'), ('W', 'Women'), ('K', 'Kids')], max_length=1)),
                ('size', models.CharField(blank=True, choices=[('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('2X', 'XXL')], max_length=2)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='shop.category')),
            ],
            options={
                'verbose_name': 'clothing',
                'verbose_name_plural': 'clothing',
                'ordering': ['-date_added'],
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='specification',
            constraint=models.CheckConstraint(check=models.Q(('available_qty__gte', 0)), name='qty_gte_0'),
        ),
        migrations.AddConstraint(
            model_name='shippingaddress',
            constraint=models.UniqueConstraint(condition=models.Q(('by_default', True)), fields=('user',), name='unique_default_address'),
        ),
        migrations.AddConstraint(
            model_name='rate',
            constraint=models.UniqueConstraint(fields=('user', 'object_id'), name='user_rate_unique'),
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.UniqueConstraint(fields=('order', 'specification'), name='order_item_unique'),
        ),
        migrations.AddConstraint(
            model_name='order',
            constraint=models.UniqueConstraint(condition=models.Q(('status', 1)), fields=('user',), name='unique_user_cart'),
        ),
    ]
