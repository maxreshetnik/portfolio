# This file overrides and extends docker-compose.yml file.
version: '3.9'
services:

  backend:
    environment:
      - PROJECT_SECRETS_FILE=/run/secrets/secrets.json
    secrets:
      - source: secrets.json
        uid: '1000'
        gid: '1000'
        mode: 0400
    deploy:
      mode: replicated
      replicas: 1
      rollback_config:
        parallelism: 1
        delay: 20s
        monitor: 30s
      update_config:
        parallelism: 1
        delay: 20s
        failure_action: rollback
        monitor: 30s

  db:
    configs:
      - source: db_init_user.sh
        target: /docker-entrypoint-initdb.d/db-init-user.sh
        mode: 0555
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/db.env
      - DB_ENV_FILE=/run/secrets/db.env
    secrets:
      - source: db.env
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        failure_action: rollback

  web:
    configs:
      - source: nginx_default.conf.template
        target: /etc/nginx/templates/default.conf.template
        mode: 0444
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME:?err}
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
        delay: 1m
      update_config:
        parallelism: 1
        delay: 1m
        failure_action: rollback

  ssl:
    configs:
      - source: ssl_entrypoint.sh
        target: /ssl-entrypoint.sh
        mode: 0555
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME:?err}
      - SSL_EMAIL=${SSL_EMAIL:?err}
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.role==manager"
      restart_policy:
        condition: on-failure
        delay: 60s
        max_attempts: 3
        window: 10m
      update_config:
        parallelism: 1
        delay: 60s
        failure_action: rollback

configs:
  db_init_user.sh:
    file: ./conf/db-init-user.sh
  nginx_default.conf.template:
    file: ./conf/nginx-default.conf.template
  ssl_entrypoint.sh:
    file: ./conf/ssl-entrypoint.sh

secrets:
  secrets.json:
    external: true
    name: portfolio_secrets.json
  db.env:
    external: true
    name: portfolio_db.env
